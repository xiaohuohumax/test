name: Release Test

on: push

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set node version to 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: npm

      - name: Install
        run: npm install --frozen-lockfile

      - name: Create Changeset
        id: changeset
        uses: changesets/action@v1
        with:
          commit: "chore(release): Publish"
          title: "chore(release): Publish"
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if changeset was published
        run: echo ${{ steps.changesets.outputs.release-url }}

      # - name: Build your project (example)
      #   run: npm run build

      # - name: Determine new version
      #   if: steps.changeset.outputs.published == 'true'
      #   id: version
      #   run: |
      #     echo "::set-output name=new_version::$(node -p "require('./package.json').version")"

      # - name: Create Git Tag
      #   if: steps.changeset.outputs.published == 'true'
      #   run: |
      #     git tag "v${{ steps.version.outputs.new_version }}"
      #     git push origin "v${{ steps.version.outputs.new_version }}"

      # - name: Create GitHub Release
      #   if: steps.changeset.outputs.published == 'true'
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: |
      #       dist/*
      #     body_path: CHANGELOG.md
      #     tag_name: v${{ steps.version.outputs.new_version }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
